{"version":3,"sources":["components/atoms/Typography/DynamicComponent.jsx","components/atoms/Typography/index.js","redux/ducks/people.js","containers/App/styles.jsx","redux/ducks/search.js","redux/ducks/films.js","redux/ducks/vehicles.js","redux/ducks/starships.js","redux/ducks/species.js","containers/App/App.jsx","utils/swapi.js","components/atoms/Thumb/styles.jsx","components/atoms/Thumb/Thumb.jsx","components/atoms/BackButton/styles.jsx","components/atoms/BackButton/BackButton.jsx","components/molecules/Category/styles.jsx","components/molecules/Category/Category.jsx","containers/Details/details-context.js","components/molecules/MetaOverlay/styles.jsx","components/molecules/MetaOverlay/MetaOverlay.jsx","containers/Details/styles.jsx","containers/Details/Details.jsx","containers/Details/Details.container.js","containers/Details/index.js","components/atoms/Input/styles.jsx","components/atoms/Input/Input.jsx","components/molecules/SearchItem/styles.jsx","components/molecules/SearchItem/SearchItem.jsx","containers/Search/styles.jsx","containers/Search/Search.jsx","containers/Search/Search.container.js","containers/Search/index.js","redux/ducks/index.js","redux/storeConfig.js","index.js","redux/middlewares/clientMiddleware.js"],"names":["StyledDynamicComponent","styled","div","_templateObject","DynamicComponent","_ref","tag","children","props","Object","objectWithoutProperties","WithComponent","withComponent","react_default","a","createElement","defaultProps","CharacterName","Typography_templateObject","BodyText","_templateObject2","Subtitle","_templateObject3","SearchResultName","_templateObject4","initialState","person","people","loading","error","__webpack_exports__","state","arguments","length","undefined","action","type","_Users_leovital_labs_starwars_search_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_Users_leovital_labs_starwars_search_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","getId","result","url","payload","getPeople","uri","dispatch","types","promise","client","get","then","response","data","selectPerson","background","concat","process","GlobalStyle","createGlobalStyle","MainContainer","AppContainer","BackgroundImage","Logo","img","_templateObject5","searchResults","isFetched","_Users_leovital_labs_starwars_search_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","searchTerm","items","getFilm","getVehicle","getStarship","getSpecie","module","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_hot_loader__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","containers_Search__WEBPACK_IMPORTED_MODULE_4__","containers_Details__WEBPACK_IMPORTED_MODULE_5__","_styles__WEBPACK_IMPORTED_MODULE_6__","hot","memo","src","exact","path","component","Search","Details","d","getImage","getCategoryUrl","searchUrl","text","replace","id","category","term","StyledThumb","circle","StyledButton","button","styles_templateObject","BackButton","Section","section","Category_styles_templateObject","Category","title","fetchMethod","meta","keyLabel","_useState","useState","_useState2","slicedToArray","loadedCategory","setLoad","useEffect","tempData","filter","item","forEach","Typography","map","key","DetailsContext","createContext","chupa","Container","MetaOverlay_styles_templateObject","name","birth_year","gender","films","species","starships","vehicles","metaFilms","metaSpecies","metaStarships","metaVehicles","Consumer","_ref2","styles_Section","molecules_Category_Category","Details_styles_templateObject","Overlay","styles_templateObject2","backToSearch","_this","history","push","_this$props","this","match","params","_this$props2","Provider","value","styles_Container","atoms_Thumb_Thumb","molecules_MetaOverlay_MetaOverlay","atoms_BackButton_BackButton","onClick","PureComponent","mapDispatchToProps","connect","app","Details_container","InputStyled","input","Picture","SearchItem","Search_styles_templateObject","SearchResults","setDebouncedSearch","debounce","searchOnChange","target","setState","objectSpread","onClickPerson","defineProperty","_this2","atoms_Input_Input","placeholder","onChange","results","molecules_SearchItem_SearchItem","search","Search_container","rootReducer","combineReducers","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","thunk","axios","getState","next","rest","_types","REQUEST","SUCCESS","FAILURE","actionPromise","status","catch","console","configureStore","render","es","App","document","getElementById"],"mappings":"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","file":"static/js/main.959a9220.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledDynamicComponent = styled.div`\n  margin: 0;\n`;\n\nconst DynamicComponent = ({ tag, children, ...props }) => {\n  const WithComponent = StyledDynamicComponent.withComponent(tag);\n\n  return <WithComponent {...props}>{children}</WithComponent>;\n};\n\nDynamicComponent.propTypes = {\n  tag: PropTypes.string,\n};\n\nDynamicComponent.defaultProps = {\n  tag: 'div',\n};\n\nexport default DynamicComponent;\n","import styled from 'styled-components';\nimport DynamicComponent from './DynamicComponent';\n\nexport const CharacterName = styled(DynamicComponent)`\n  font-weight: 900;\n  text-transform: uppercase;\n  font-size: 5.5rem;\n  text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.4);\n`;\n\nexport const BodyText = styled(DynamicComponent)`\n  font-weight: 400;\n  font-size: 1.4rem;\n  line-height: 2rem;\n`;\n\nexport const Subtitle = styled(DynamicComponent)`\n  font-weight: 900;\n  font-size: 1.6rem;\n  vertical-align: middle;\n  margin-bottom: 10px;\n  :before {\n    content: ' ';\n    width: 8px;\n    height: 15px;\n    background-color: #ffc500;\n    vertical-align: middle;\n    display: inline-block;\n    margin-right: 10px;\n  }\n`;\n\nexport const SearchResultName = styled(DynamicComponent)`\n  font-weight: 900;\n  text-transform: uppercase;\n  font-size: 2rem;\n`;\n","import { getId } from 'utils/swapi';\n\nexport const PEOPLE_REQUEST = 'duco/people/PEOPLE_REQUEST';\nexport const PEOPLE_RESPONSE = 'duco/people/PEOPLE_RESPONSE';\nexport const PEOPLE_FAILURE = 'duco/people/PEOPLE_FAILURE';\n\nexport const PEOPLE_SELECTED = 'duco/people/PEOPLE_SELECTED';\n\nconst initialState = {\n  person: {},\n  people: {},\n  loading: false,\n  error: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case PEOPLE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n      };\n    case PEOPLE_RESPONSE:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        people: { ...state.people, [getId(action.result.url)]: action.result },\n      };\n    case PEOPLE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        people: {},\n      };\n    case PEOPLE_SELECTED:\n      return {\n        ...state,\n        people: { ...state.people, ...action.payload },\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getPeople = uri => dispatch =>\n  dispatch({\n    types: [PEOPLE_REQUEST, PEOPLE_RESPONSE, PEOPLE_FAILURE],\n    promise: client => client.get(uri).then(response => response.data),\n  });\n\nexport const selectPerson = person => dispatch =>\n  dispatch({\n    type: PEOPLE_SELECTED,\n    payload: person,\n  });\n","import styled, { createGlobalStyle } from 'styled-components';\n\nconst background = `${process.env.PUBLIC_URL}/assets/images/backgrounds/100.jpg`;\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body {\n    margin: 0;\n    height: 100vh;\n    font-family: 'Lato', sans-serif;\n    font-size: 16px;\n  }\n`;\n\nexport const MainContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  align-content: center;\n  align-items: center;\n  background-color: black;\n  justify-content: center;\n`;\n\nexport const AppContainer = styled.div`\n  width: 1500px;\n  z-index: 10;\n  border-radius: 10px;\n`;\n\nexport const BackgroundImage = styled.div`\n  z-index: 0;\n  position: fixed;\n  height: 120vh;\n  width: 120vw;\n  background: url(${background}) no-repeat center center;\n  background-size: cover;\n`;\n\nexport const Logo = styled.img`\n  width: 200px;\n  margin: auto;\n  display: block;\n  margin-bottom: 30px;\n`;\n","export const FIND_PEOPLE_REQUEST = 'duco/people/FIND_PEOPLE_REQUEST';\nexport const FIND_PEOPLE_RESPONSE = 'duco/people/FIND_PEOPLE_RESPONSE';\nexport const FIND_PEOPLE_FAILURE = 'duco/people/FIND_PEOPLE_FAILURE';\n\nconst initialState = {\n  searchResults: {},\n  isFetched: false,\n  loading: false,\n  error: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FIND_PEOPLE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        isFetched: false,\n        searchResults: {},\n      };\n    case FIND_PEOPLE_RESPONSE:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        isFetched: true,\n        searchResults: action.result,\n      };\n    case FIND_PEOPLE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        isFetched: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const searchTerm = (uri) => dispatch =>\n  dispatch({\n    types: [FIND_PEOPLE_REQUEST, FIND_PEOPLE_RESPONSE, FIND_PEOPLE_FAILURE],\n    promise: client =>\n      client.get(uri).then(response => response.data),\n  });\n","import { getItems } from 'utils/swapi';\n\nexport const FILMS_REQUEST = 'duco/films/FILMS_REQUEST';\nexport const FILMS_RESPONSE = 'duco/films/FILMS_RESPONSE';\nexport const FILMS_FAILURE = 'duco/films/FILMS_FAILURE';\n\nconst initialState = {\n  items: {},\n  loading: false,\n  error: false,\n  isFetched: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FILMS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        isFetched: false,\n      };\n    case FILMS_RESPONSE:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        isFetched: true,\n        items: { ...state.items, ...{[action.result.url]: action.result } },\n      };\n    case FILMS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        isFetched: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getFilm = uri => {\n  return {\n    types: [FILMS_REQUEST, FILMS_RESPONSE, FILMS_FAILURE],\n    promise: client => client.get(uri).then(response => response.data)\n  };\n};\n","import { getItems } from 'utils/swapi';\n\nexport const VEHICLES_REQUEST = 'duco/vehicles/VEHICLES_REQUEST';\nexport const VEHICLES_RESPONSE = 'duco/vehicles/VEHICLES_RESPONSE';\nexport const VEHICLES_FAILURE = 'duco/vehicles/VEHICLES_FAILURE';\n\nconst initialState = {\n  items: {},\n  loading: false,\n  error: false,\n  isFetched: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case VEHICLES_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        isFetched: false,\n      };\n    case VEHICLES_RESPONSE:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        isFetched: true,\n        items: { ...state.items, ...{[action.result.url]: action.result } },\n      };\n    case VEHICLES_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        isFetched: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getVehicle = uri => {\n  return {\n    types: [VEHICLES_REQUEST, VEHICLES_RESPONSE, VEHICLES_FAILURE],\n    promise: client => client.get(uri).then(response => response.data)\n  };\n};\n","import { getItems } from 'utils/swapi';\n\nexport const STARSHIPS_REQUEST = 'duco/starships/STARSHIPS_REQUEST';\nexport const STARSHIPS_RESPONSE = 'duco/starships/STARSHIPS_RESPONSE';\nexport const STARSHIPS_FAILURE = 'duco/starships/STARSHIPS_FAILURE';\n\nconst initialState = {\n  items: {},\n  loading: false,\n  error: false,\n  isFetched: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case STARSHIPS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        isFetched: false,\n      };\n    case STARSHIPS_RESPONSE:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        isFetched: true,\n        items: { ...state.items, ...{[action.result.url]: action.result } },\n      };\n    case STARSHIPS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        isFetched: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getStarship = uri => {\n  return {\n    types: [STARSHIPS_REQUEST, STARSHIPS_RESPONSE, STARSHIPS_FAILURE],\n    promise: client => client.get(uri).then(response => response.data)\n  };\n};\n","import { getItems } from 'utils/swapi';\n\nexport const SPECIES_REQUEST = 'duco/species/SPECIES_REQUEST';\nexport const SPECIES_RESPONSE = 'duco/species/SPECIES_RESPONSE';\nexport const SPECIES_FAILURE = 'duco/species/SPECIES_FAILURE';\n\nconst initialState = {\n  items: {},\n  loading: false,\n  error: false,\n  isFetched: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SPECIES_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        isFetched: false,\n      };\n    case SPECIES_RESPONSE:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        isFetched: true,\n        items: { ...state.items, ...{[action.result.url]: action.result } },\n      };\n    case SPECIES_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        isFetched: false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getSpecie = uri => {\n  return {\n    types: [SPECIES_REQUEST, SPECIES_RESPONSE, SPECIES_FAILURE],\n    promise: client => client.get(uri).then(response => response.data)\n  };\n};\n","import React, { memo } from 'react';\nimport { hot } from 'react-hot-loader';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Search from 'containers/Search';\nimport Details from 'containers/Details';\n\nimport {\n  MainContainer,\n  AppContainer,\n  BackgroundImage,\n  GlobalStyle,\n  Logo,\n} from './styles';\n\nconst App = () => {\n  return (\n    <MainContainer>\n      <GlobalStyle />\n      <BackgroundImage />\n      <AppContainer>\n        <Logo src={`${process.env.PUBLIC_URL}/assets/images/Star_Wars_logo.svg`} />\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Search} />\n            <Route path=\"/details/:id\" component={Details} />\n          </Switch>\n        </Router>\n      </AppContainer>\n    </MainContainer>\n  );\n};\n\nexport default hot(module)(memo(App));\n","import axios from 'axios';\n\nexport const getId = text => text.replace(/[^0-9]/g, '');\n\nexport const getImage = id =>\n  `${process.env.PUBLIC_URL}/assets/images/characters/${id}.jpg`;\n\nexport const getCategoryUrl = (category, id) => `https://swapi.co/api/${category}/${id}/`;\n\nexport const searchUrl = (category, term) => `https://swapi.co/api/${category}/?search=${term}`;\n\nconst arrayToObject = (array, key) =>\n  array.reduce((obj, item) => {\n    obj[item[key]] = item;\n    return obj;\n  }, {});\n\nfunction getItem(url) {\n  return axios.get(url).then(response => response.data);\n}\n\nexport const getItems = urls => {\n  return axios\n    .all(urls.map(url => getItem(url)))\n    .then(axios.spread((...urls) => arrayToObject(urls, 'url')))\n    .catch(error => error);\n};\n","import styled from 'styled-components';\n\nexport const StyledThumb = styled.div`\n  width: 500px;\n  height: 500px;\n  background: url(${props => props.src || ''}) no-repeat;\n  background-size: cover;\n  border-radius: ${props => (props.circle ? '50%' : '0')};\n  z-index: 1;\n`;\n","import React, { memo } from 'react';\nimport { StyledThumb } from './styles';\n\nconst Thumb = props => {\n  return <StyledThumb {...props} />;\n};\n\nexport default memo(Thumb);\n","import styled from 'styled-components';\nconst background = `${process.env.PUBLIC_URL}/assets/images/back-button.svg`;\n\nexport const StyledButton = styled.button`\n  outline: none;\n  cursor: pointer;\n  position: absolute;\n  top: 50px;\n  left: 50px;\n  width: 70px;\n  height: 70px;\n  z-index: 10;\n  background: url(${background}) no-repeat center center;\n  background-size: cover;\n  border: none;\n  transition: all 200ms ease-in-out;\n  &:hover {\n    transform: scale(1.2);\n  }\n`;\n","import React from 'react';\nimport { StyledButton } from './styles';\n\nconst BackButton = (props) => {\n  return (\n    <StyledButton {...props} />\n  );\n};\n\nexport default BackButton;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 20px 0;\n`;\n","import React, { memo, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BodyText, Subtitle } from 'components/atoms/Typography';\nimport { Section } from './styles';\n\nconst Category = ({ title, data, fetchMethod, meta, keyLabel }) => {\n  const { items, loading, isFetched } = meta;\n  const [loadedCategory, setLoad] = useState(false);\n  useEffect(() => {\n    const tempData = data.filter(item => !items[item]);\n    if (fetchMethod && !loading && tempData.length > 0 && !loadedCategory) {\n      tempData.forEach((uri) => {\n        fetchMethod(uri);\n      });\n      setLoad(true);\n    }\n  });\n\n  if (loading) {\n    return <div>loading</div>;\n  }\n\n  if (data.length > 0 && isFetched) {\n    return (\n      <Section>\n        <Subtitle tag=\"h3\">{title}</Subtitle>\n\n        {data.map(item => {\n          return (\n            <BodyText key={item} tag=\"p\">\n              {items[item] && items[item][keyLabel]}\n            </BodyText>\n          );\n        })}\n      </Section>\n    );\n  }\n  return null;\n};\n\nCategory.propTypes = {\n  data: PropTypes.array,\n  title: PropTypes.string,\n  fetchMethod: PropTypes.func,\n  meta: PropTypes.object,\n  keyLabel: PropTypes.string,\n};\n\nCategory.defaultProps = {\n  data: [],\n  title: '',\n  fetchMethod: undefined,\n  meta: {},\n  keyLabel: '',\n};\n\nexport default memo(Category);\n","import { createContext } from 'react';\n\nexport const DetailsContext = createContext({ chupa: 'muito' });\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  z-index: 10;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  padding: 50px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const Section = styled.section`\n  margin: 20px 0;\n`;\n","import React, { memo } from 'react';\n\nimport { CharacterName, BodyText, Subtitle } from 'components/atoms/Typography';\nimport Category from 'components/molecules/Category';\nimport { DetailsContext } from 'containers/Details/details-context';\nimport { Container, Section } from './styles';\n\nconst MetaOverlay = ({ people, meta }) => {\n  const { name, birth_year, gender, films, species, starships, vehicles } = people;\n\n  const {\n    films: metaFilms,\n    species: metaSpecies,\n    starships: metaStarships,\n    vehicles: metaVehicles,\n  } = meta;\n  return (\n    <DetailsContext.Consumer>\n      {({ getFilm, getSpecie, getStarship, getVehicle }) => {\n        return (\n          <Container>\n            <div>\n              <Section>\n                <Subtitle tag=\"h3\">Gender</Subtitle>\n                <BodyText tag=\"p\">{gender}</BodyText>\n              </Section>\n              <Section>\n                <Subtitle tag=\"h3\">Birth Year</Subtitle>\n                <BodyText tag=\"p\">{birth_year}</BodyText>\n              </Section>\n              <Category\n                title=\"Species\"\n                fetchMethod={getSpecie}\n                data={species}\n                meta={metaSpecies}\n                keyLabel=\"name\"\n              />\n              <CharacterName tag=\"h1\">{name}</CharacterName>\n            </div>\n            <div>\n              <Category\n                title=\"Vehicles\"\n                fetchMethod={getVehicle}\n                data={vehicles}\n                meta={metaVehicles}\n                keyLabel=\"name\"\n              />\n              <Category\n                title=\"Starships\"\n                fetchMethod={getStarship}\n                data={starships}\n                meta={metaStarships}\n                keyLabel=\"name\"\n              />\n              <Category\n                title=\"Films\"\n                fetchMethod={getFilm}\n                data={films}\n                meta={metaFilms}\n                keyLabel=\"title\"\n              />\n            </div>\n          </Container>\n        );\n      }}\n    </DetailsContext.Consumer>\n  );\n};\n\nexport default memo(MetaOverlay);\n","import styled from 'styled-components';\n\nconst background = `${process.env.PUBLIC_URL}/assets/images/backgrounds/100.jpg`;\nexport const Container = styled.div`\n  display: flex;\n  position: relative;\n  height: 760px;\n  align-items: middle;\n  justify-content: center;\n  padding: 50px;\n  background-color: #000;\n  border-radius: 5px;\n  background: url(${background}) no-repeat center center;\n  background-size: cover;\n  color: white;\n  box-shadow: 0px 9px 33px 0px rgba(0, 0, 0, 0.53);\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: #000;\n  top: 0;\n  left: 0;\n  z-index: 0;\n  border-radius: 5px;\n  opacity: 0.6;\n`;\n","import React, { PureComponent } from 'react';\nimport Thumb from 'components/atoms/Thumb';\nimport BackButton from 'components/atoms/BackButton';\nimport MetaOverlay from 'components/molecules/MetaOverlay';\nimport { getImage, getCategoryUrl } from 'utils/swapi';\nimport { DetailsContext } from './details-context';\nimport { Container, Overlay } from './styles';\n\nclass Details extends PureComponent {\n  componentDidMount() {\n    const { getPeople, people, match } = this.props;\n    const id = match.params.id;\n    if (!people[id]) {\n      const url = getCategoryUrl('people', id);\n      getPeople(url);\n    }\n  }\n\n  backToSearch = () => {\n    const { history } = this.props;\n    history.push('/');\n  }\n\n  render() {\n    const {\n      people,\n      getFilm,\n      getVehicle,\n      getSpecie,\n      getStarship,\n      meta,\n      match,\n    } = this.props;\n    const { id } = match.params;\n\n    if (!people[id]) {\n      return null;\n    }\n\n    return (\n      <DetailsContext.Provider\n        value={{ getFilm, getSpecie, getStarship, getVehicle }}\n      >\n        <Container>\n          <Overlay />\n          <Thumb id={id} src={getImage(id)} circle />\n          <MetaOverlay people={people[id]} meta={meta} />\n          <BackButton onClick={this.backToSearch} />\n        </Container>\n      </DetailsContext.Provider>\n    );\n  }\n}\n\nexport default Details;\n","import { connect } from 'react-redux';\nimport { getPeople } from 'ducks/people';\nimport { getFilm } from 'ducks/films';\nimport { getVehicle } from 'ducks/vehicles';\nimport { getStarship } from 'ducks/starships';\nimport { getSpecie } from 'ducks/species';\nimport Details from './Details';\n\nconst mapStateToProps = state => ({\n  app: state.app,\n  people: state.people.people,\n  person: state.people.person,\n  meta: {\n    films: state.films,\n    starships: state.starships,\n    vehicles: state.vehicles,\n    species: state.species,\n  },\n});\n\nconst mapDispatchToProps = {\n  getPeople,\n  getVehicle,\n  getStarship,\n  getSpecie,\n  getFilm,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Details);\n","export { default } from './Details.container';\n","import styled from 'styled-components';\n\nexport const InputStyled = styled.input`\n  outline: none;\n  border: none;\n  border-radius: 5px;\n  padding: 15px;\n  font-size: 1.6rem;\n  width: 1000px;\n  text-transform: uppercase;\n  font-weight: 900;\n`;\n","import React, { memo } from 'react';\nimport { InputStyled } from './styles';\n\nconst Input = props => {\n  return <InputStyled {...props} />;\n};\n\nexport default memo(Input);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  background-color: white;\n  margin: 5px;\n  padding: 14px;\n  align-items: center;\n  width: 1000px;\n  cursor: pointer;\n`;\n\nexport const Picture = styled.img`\n  height: 100px;\n  margin-right: 30px;\n`;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { SearchResultName } from 'components/atoms/Typography';\nimport { getId } from 'utils/swapi';\nimport { Container, Picture } from './styles';\n\nconst SearchItem = ({ item, ...props }) => {\n  return (\n    <Container {...props}>\n      <Picture\n        src={`${process.env.PUBLIC_URL}/assets/images/characters/${getId(item.url)}.jpg`}\n      />\n      <SearchResultName>{item.name}</SearchResultName>\n    </Container>\n  );\n};\n\nSearchItem.propTypes = {\n  item: PropTypes.object,\n};\n\nSearchItem.defaultProps = {\n  item: {},\n};\n\nexport default memo(SearchItem);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SearchResults = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 30px;\n  width: 1000px;\n  height: 400px;\n  overflow: auto;\n`;\n","import React, { PureComponent } from 'react';\nimport debounce from 'debounce';\nimport Input from 'components/atoms/Input';\nimport SearchItem from 'components/molecules/SearchItem';\nimport { getId, searchUrl } from 'utils/swapi';\nimport { Container, SearchResults } from './styles';\n\nclass Search extends PureComponent {\n  state = {\n    term: '',\n  };\n\n  setDebouncedSearch = debounce(term => {\n    const { searchTerm } = this.props;\n    term && searchTerm(searchUrl('people', term));\n  }, 500);\n\n  searchOnChange = ({ target }) => {\n    const { value } = target;\n    this.setState(state => ({ ...state, term: value }));\n    this.setDebouncedSearch(value);\n  };\n\n  onClickPerson = person => () => {\n    const { selectPerson, history } = this.props;\n    const id = getId(person.url);\n    selectPerson({ [id]: person });\n    history.push(`/details/${id}`);\n  };\n\n  render() {\n    const { term } = this.state;\n    const { searchResults, isFetched } = this.props;\n\n    return (\n      <Container>\n        <Input\n          placeholder=\"Search for characters\"\n          value={term}\n          onChange={this.searchOnChange}\n        />\n\n        <SearchResults>\n          {searchResults.results &&\n            searchResults.results.map(person => (\n              <SearchItem\n                key={person.url}\n                onClick={this.onClickPerson(person)}\n                item={person}\n              />\n            ))}\n          {/* <Trail\n            native\n            keys={item => item.url}\n            items={searchResults.results}\n            from={{ opacity: 0, x: -100 }}\n            to={{ opacity: isFetched ? 1 : 0, x: isFetched ? 0 : 100 }}\n          >\n            {person => ({ x, opacity }) => {\n              return (\n                <animated.div\n                  style={{\n                    opacity,\n                    transform: x.interpolate(x => `translate3d(${x}%,0,0)`),\n                  }}\n                >\n                  <SearchItem onClick={this.onClickPerson(person)} item={person} />\n                </animated.div>\n              );\n            }}\n          </Trail> */}\n        </SearchResults>\n      </Container>\n    );\n  }\n}\n\nexport default Search;\n","import { connect } from 'react-redux';\nimport { searchTerm } from 'ducks/search';\nimport { selectPerson } from 'ducks/people';\nimport Search from './Search';\n\nconst mapStateToProps = state => ({\n  searchResults: state.search.searchResults,\n  isFetched: state.search.isFetched,\n});\n\nconst mapDispatchToProps = {\n  searchTerm,\n  selectPerson,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n","export { default } from './Search.container';\n","import { combineReducers } from 'redux';\nimport search from './search';\nimport people from './people';\nimport films from './films';\nimport vehicles from './vehicles';\nimport species from './species';\nimport starships from './starships';\n\nconst rootReducer = combineReducers({\n  people,\n  films,\n  vehicles,\n  species,\n  starships,\n  search,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport axios from 'axios';\nimport rootReducer from './ducks/index';\nimport clientMiddleware from './middlewares/clientMiddleware';\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nconst configureStore = initialState => {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk, clientMiddleware(axios)))\n  );\n\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\n    module.hot.accept('./ducks', () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from 'containers/App';\nimport configureStore from './redux/storeConfig';\n\nconst store = configureStore();\n\nconst renderApp = () =>\n  render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n  module.hot.accept('containers/App', renderApp);\n}\n\nrenderApp();\n","export default function clientMiddleware(client) {\n  return ({ dispatch, getState }) => {\n    return next => action => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState);\n      }\n\n      const { promise, types, ...rest } = action; // eslint-disable-line no-redeclare\n      if (!promise) {\n        return next(action);\n      }\n\n      const [REQUEST, SUCCESS, FAILURE] = types;\n      next({ ...rest, type: REQUEST });\n\n      const actionPromise = promise(client);\n\n      actionPromise\n        .then(\n          result => next({ ...rest, result: result, type: SUCCESS }),\n          error => next({ ...rest, error: error.response.status, type: FAILURE })\n        )\n        .catch(error => {\n          console.error('MIDDLEWARE ERROR:', error);\n          next({ ...rest, error, type: FAILURE });\n        });\n\n      return actionPromise;\n    };\n  };\n}\n"],"sourceRoot":""}